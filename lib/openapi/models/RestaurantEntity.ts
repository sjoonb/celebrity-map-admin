/* tslint:disable */
/* eslint-disable */
/**
 * Celebrity Map
 * 유명인 맛지도 백오피스/앱 API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CelebrityEntity } from './CelebrityEntity';
import {
    CelebrityEntityFromJSON,
    CelebrityEntityFromJSONTyped,
    CelebrityEntityToJSON,
} from './CelebrityEntity';
import type { ExternalMapLinkEntity } from './ExternalMapLinkEntity';
import {
    ExternalMapLinkEntityFromJSON,
    ExternalMapLinkEntityFromJSONTyped,
    ExternalMapLinkEntityToJSON,
} from './ExternalMapLinkEntity';

/**
 * 
 * @export
 * @interface RestaurantEntity
 */
export interface RestaurantEntity {
    /**
     * 
     * @type {number}
     * @memberof RestaurantEntity
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof RestaurantEntity
     */
    celebrityId: number;
    /**
     * 
     * @type {string}
     * @memberof RestaurantEntity
     */
    restaurantName: string;
    /**
     * 
     * @type {string}
     * @memberof RestaurantEntity
     */
    restaurantPhone: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RestaurantEntity
     */
    restaurantMenu: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof RestaurantEntity
     */
    startSeconds: number;
    /**
     * 
     * @type {string}
     * @memberof RestaurantEntity
     */
    youtubeVideoUrl: string;
    /**
     * 
     * @type {number}
     * @memberof RestaurantEntity
     */
    externalMapLinkId: number;
    /**
     * 
     * @type {number}
     * @memberof RestaurantEntity
     */
    latitude: number;
    /**
     * 
     * @type {number}
     * @memberof RestaurantEntity
     */
    longitude: number;
    /**
     * 
     * @type {Date}
     * @memberof RestaurantEntity
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof RestaurantEntity
     */
    updatedAt: Date;
    /**
     * 
     * @type {CelebrityEntity}
     * @memberof RestaurantEntity
     */
    celebrity: CelebrityEntity;
    /**
     * 
     * @type {ExternalMapLinkEntity}
     * @memberof RestaurantEntity
     */
    externalMapLink: ExternalMapLinkEntity;
}

/**
 * Check if a given object implements the RestaurantEntity interface.
 */
export function instanceOfRestaurantEntity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "celebrityId" in value;
    isInstance = isInstance && "restaurantName" in value;
    isInstance = isInstance && "restaurantPhone" in value;
    isInstance = isInstance && "restaurantMenu" in value;
    isInstance = isInstance && "startSeconds" in value;
    isInstance = isInstance && "youtubeVideoUrl" in value;
    isInstance = isInstance && "externalMapLinkId" in value;
    isInstance = isInstance && "latitude" in value;
    isInstance = isInstance && "longitude" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "celebrity" in value;
    isInstance = isInstance && "externalMapLink" in value;

    return isInstance;
}

export function RestaurantEntityFromJSON(json: any): RestaurantEntity {
    return RestaurantEntityFromJSONTyped(json, false);
}

export function RestaurantEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestaurantEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'celebrityId': json['celebrityId'],
        'restaurantName': json['restaurantName'],
        'restaurantPhone': json['restaurantPhone'],
        'restaurantMenu': json['restaurantMenu'],
        'startSeconds': json['startSeconds'],
        'youtubeVideoUrl': json['youtubeVideoUrl'],
        'externalMapLinkId': json['externalMapLinkId'],
        'latitude': json['latitude'],
        'longitude': json['longitude'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'celebrity': CelebrityEntityFromJSON(json['celebrity']),
        'externalMapLink': ExternalMapLinkEntityFromJSON(json['externalMapLink']),
    };
}

export function RestaurantEntityToJSON(value?: RestaurantEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'celebrityId': value.celebrityId,
        'restaurantName': value.restaurantName,
        'restaurantPhone': value.restaurantPhone,
        'restaurantMenu': value.restaurantMenu,
        'startSeconds': value.startSeconds,
        'youtubeVideoUrl': value.youtubeVideoUrl,
        'externalMapLinkId': value.externalMapLinkId,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'celebrity': CelebrityEntityToJSON(value.celebrity),
        'externalMapLink': ExternalMapLinkEntityToJSON(value.externalMapLink),
    };
}

